// Code generated by MockGen. DO NOT EDIT.
// Source: internal/generator/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGenerate is a mock of Generate interface.
type MockGenerate struct {
	ctrl     *gomock.Controller
	recorder *MockGenerateMockRecorder
}

// MockGenerateMockRecorder is the mock recorder for MockGenerate.
type MockGenerateMockRecorder struct {
	mock *MockGenerate
}

// NewMockGenerate creates a new mock instance.
func NewMockGenerate(ctrl *gomock.Controller) *MockGenerate {
	mock := &MockGenerate{ctrl: ctrl}
	mock.recorder = &MockGenerateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenerate) EXPECT() *MockGenerateMockRecorder {
	return m.recorder
}

// GenerateOrder mocks base method.
func (m *MockGenerate) GenerateOrder() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateOrder")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateOrder indicates an expected call of GenerateOrder.
func (mr *MockGenerateMockRecorder) GenerateOrder() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateOrder", reflect.TypeOf((*MockGenerate)(nil).GenerateOrder))
}
